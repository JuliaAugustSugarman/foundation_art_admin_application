{"ast":null,"code":"var _jsxFileName = \"/Users/juliasugarman/Documents/prime/solo_project/src/components/UserPage/UserPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './user.css'; // this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\n\nvar UserPage = function UserPage(props) {\n  return React.createElement(\"div\", {\n    className: \"bckgrnd-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"welcome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Get your art on, \", props.user.username, \"!\"), React.createElement(LogOutButton, {\n    className: \"log-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n}; // Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}; // this allows us to use <App /> in index.js\n\n\nexport default connect(mapStateToProps)(UserPage);","map":{"version":3,"sources":["/Users/juliasugarman/Documents/prime/solo_project/src/components/UserPage/UserPage.js"],"names":["React","connect","LogOutButton","UserPage","props","user","username","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAO,YAAP,C,CAEA;AACA;AACA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SACf;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAI,IAAA,EAAE,EAAC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACqBA,KAAK,CAACC,IAAN,CAAWC,QADhC,MALF,EASE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADe;AAAA,CAAjB,C,CAgBA;AACA;AACA;;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCH,IAAAA,IAAI,EAAEG,KAAK,CAACH;AADoB,GAAL;AAAA,CAA7B,C,CAIA;;;AACA,eAAeJ,OAAO,CAACM,eAAD,CAAP,CAAyBJ,QAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport './user.css';\n\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\nconst UserPage = (props) => (\n  <div className=\"bckgrnd-container\">\n\n\n\n    \n    <h1 id=\"welcome\">\n      Get your art on, { props.user.username }!\n    </h1>\n    {/* <p>Your ID is: {props.user.id}</p> */}\n    <LogOutButton className=\"log-in\" />\n\n    \n  </div>\n);\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(UserPage);\n"]},"metadata":{},"sourceType":"module"}