{"ast":null,"code":"import _regeneratorRuntime from \"/Users/juliasugarman/Documents/prime/solo_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(artSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getArtwork),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(deleteArt);\n\nimport axios from 'axios'; // Import saga middleware\n\nimport { takeEvery, put as dispatch } from 'redux-saga/effects'; //root Saga\n\nfunction artSaga() {\n  return _regeneratorRuntime.wrap(function artSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery('FETCH_GALLERY', getArtwork);\n\n        case 2:\n          _context.next = 4;\n          return takeEvery('DELETE_ARTWORK', deleteArt);\n\n        case 4:\n          _context.next = 6;\n          return takeEvery('ADD_ARTWORK', postProject);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction getArtwork() {\n  var getArtworkResponse;\n  return _regeneratorRuntime.wrap(function getArtwork$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return axios.get('/api/gallery');\n\n        case 2:\n          getArtworkResponse = _context2.sent;\n          _context2.next = 5;\n          return dispatch({\n            type: 'SET_ART',\n            payload: getArtworkResponse.data\n          });\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction deleteArt(action) {\n  return _regeneratorRuntime.wrap(function deleteArt$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return axios.delete('/api/gallery/' + action.payload);\n\n        case 3:\n          _context3.next = 5;\n          return dispatch({\n            type: 'FETCH_GALLERY'\n          });\n\n        case 5:\n          _context3.next = 10;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log('error deleting', action, _context3.t0);\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nexport default artSaga;","map":{"version":3,"sources":["/Users/juliasugarman/Documents/prime/solo_project/src/redux/sagas/gallerySaga.js"],"names":["artSaga","getArtwork","deleteArt","axios","takeEvery","put","dispatch","postProject","get","getArtworkResponse","type","payload","data","action","delete","console","log"],"mappings":";;;;yBAOUA,O;;;yBAUAC,U;;;yBAOCC,S;;AAxBX,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,GAAG,IAAIC,QAA3B,QAA0C,oBAA1C,C,CAGA;;AACA,SAAUN,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMI,SAAS,CAAC,eAAD,EAAkBH,UAAlB,CAAf;;AADJ;AAAA;AAEI,iBAAMG,SAAS,CAAC,gBAAD,EAAmBF,SAAnB,CAAf;;AAFJ;AAAA;AAGI,iBAAME,SAAS,CAAC,aAAD,EAAgBG,WAAhB,CAAf;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUN,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC+B,iBAAME,KAAK,CAACK,GAAN,CAAU,cAAV,CAAN;;AAD/B;AACUC,UAAAA,kBADV;AAAA;AAEI,iBAAMH,QAAQ,CAAC;AAAEI,YAAAA,IAAI,EAAE,SAAR;AAAmBC,YAAAA,OAAO,EAAEF,kBAAkB,CAACG;AAA/C,WAAD,CAAd;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAWV,SAAX,CAAqBW,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQ,iBAAMV,KAAK,CAACW,MAAN,CAAa,kBAAkBD,MAAM,CAACF,OAAtC,CAAN;;AAFR;AAAA;AAGQ,iBAAML,QAAQ,CAAC;AAAEI,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAd;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMQK,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,MAA9B;;AANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeb,OAAf","sourcesContent":["import axios from 'axios';\n\n// Import saga middleware\nimport { takeEvery, put as dispatch} from 'redux-saga/effects';\n\n\n//root Saga\nfunction* artSaga() {\n    yield takeEvery('FETCH_GALLERY', getArtwork);\n    yield takeEvery('DELETE_ARTWORK', deleteArt);\n    yield takeEvery('ADD_ARTWORK', postProject);\n}\n\n\n\n\n\nfunction* getArtwork() {\n    const getArtworkResponse = yield axios.get('/api/gallery');\n    yield dispatch({ type: 'SET_ART', payload: getArtworkResponse.data });\n}\n\n\n\nfunction * deleteArt(action) {\n    try {\n        yield axios.delete('/api/gallery/' + action.payload);\n        yield dispatch({ type: 'FETCH_GALLERY' });\n    }\n    catch (error) {\n        console.log('error deleting', action, error);\n    }\n}\n\n\nexport default artSaga;"]},"metadata":{},"sourceType":"module"}