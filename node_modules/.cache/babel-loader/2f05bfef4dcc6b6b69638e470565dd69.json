{"ast":null,"code":"import _regeneratorRuntime from \"/Users/juliasugarman/Documents/prime/solo_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(artSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getArtwork),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(placeArtwork);\n\nimport axios from 'axios'; // Import saga middleware\n\nimport { takeEvery, put as dispatch, actionChannel } from 'redux-saga/effects'; //root Saga\n\nfunction artSaga() {\n  return _regeneratorRuntime.wrap(function artSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery('FETCH_GALLERY', getArtwork);\n\n        case 2:\n          _context.next = 4;\n          return takeEvery('');\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction getArtwork() {\n  var getArtworkResponse;\n  return _regeneratorRuntime.wrap(function getArtwork$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return axios.get('/api/gallery');\n\n        case 2:\n          getArtworkResponse = _context2.sent;\n          _context2.next = 5;\n          return dispatch({\n            type: 'SET_ART',\n            payload: getArtworkResponse.data\n          });\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction placeArtwork(action) {\n  return _regeneratorRuntime.wrap(function placeArtwork$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return dispatch({\n            type: 'SET_WORK',\n            payload: action.payload\n          });\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nexport default artSaga;","map":{"version":3,"sources":["/Users/juliasugarman/Documents/prime/solo_project/src/redux/sagas/gallerySaga.js"],"names":["artSaga","getArtwork","placeArtwork","axios","takeEvery","put","dispatch","actionChannel","get","getArtworkResponse","type","payload","data","action"],"mappings":";;;;yBAOUA,O;;;yBAOAC,U;;;yBAMAC,Y;;AApBV,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,GAAG,IAAIC,QAA3B,EAAqCC,aAArC,QAA0D,oBAA1D,C,CAGA;;AACA,SAAUP,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMI,SAAS,CAAC,eAAD,EAAkBH,UAAlB,CAAf;;AADJ;AAAA;AAEI,iBAAMG,SAAS,CAAC,EAAD,CAAf;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAUH,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAC+B,iBAAME,KAAK,CAACK,GAAN,CAAU,cAAV,CAAN;;AAD/B;AACUC,UAAAA,kBADV;AAAA;AAEI,iBAAMH,QAAQ,CAAC;AAAEI,YAAAA,IAAI,EAAE,SAAR;AAAmBC,YAAAA,OAAO,EAAEF,kBAAkB,CAACG;AAA/C,WAAD,CAAd;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,SAAUV,YAAV,CAAuBW,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMP,QAAQ,CAAC;AAAEI,YAAAA,IAAI,EAAE,UAAR;AAAoBC,YAAAA,OAAO,EAAEE,MAAM,CAACF;AAApC,WAAD,CAAd;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeX,OAAf","sourcesContent":["import axios from 'axios';\n\n// Import saga middleware\nimport { takeEvery, put as dispatch, actionChannel } from 'redux-saga/effects';\n\n\n//root Saga\nfunction* artSaga() {\n    yield takeEvery('FETCH_GALLERY', getArtwork);\n    yield takeEvery('')\n    // yield takeEvery('')\n}\n\n\nfunction* getArtwork() {\n    const getArtworkResponse = yield axios.get('/api/gallery');\n    yield dispatch({ type: 'SET_ART', payload: getArtworkResponse.data });\n}\n\n\nfunction* placeArtwork(action) {\n    // const placeArtwork = yield axios.get('/api/artPage');\n    yield dispatch({ type: 'SET_WORK', payload: action.payload });\n}\n\nexport default artSaga;"]},"metadata":{},"sourceType":"module"}